{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"PHP Pr\u00e1ctica 2.3: Instalar, configurar y securizar phpMyAdmin","text":""},{"location":"#descripcion","title":"Descripci\u00f3n","text":"<ul> <li>DOCUMENTO-INFORMACI\u00d3N</li> </ul>"},{"location":"Documento-informacion/","title":"PHP Pr\u00e1ctica 2.3: Instalar, configurar y securizar phpMyAdmin","text":""},{"location":"Documento-informacion/#paso-1","title":"PASO 1","text":""},{"location":"Documento-informacion/#instalacion-del-conjunto-de-sofware-lamp","title":"Instalaci\u00f3n del conjunto de sofware LAMP","text":"Un script de instalaci\u00f3n de LAMP automatiza la instalaci\u00f3n y configuraci\u00f3n de los componentes esenciales de la pila LAMP (Linux, Apache, MySQL, PHP) en un sistema Linux, evitando que tengas que ejecutar manualmente cada comando. Este script realiza todas las acciones necesarias, como la actualizaci\u00f3n del sistema, la instalaci\u00f3n de paquetes, la configuraci\u00f3n de servicios.   <p>** Puedes ver el script aqu\u00ed</p> <p>DESCARGAR</p> <p>Lo comprobamos con las versiones:</p> <p></p> <p>Comprobamos el estado de apache y ajustamos la configuraci\u00f3n del firewall:</p> <p></p> <p>Comprobamos en el navegador que tambi\u00e9n nos funciona:</p> <p></p> <p>Ahora vamos a ver la p\u00e1gina web predeterminada de PHP: Creamos un archivo con el nombre veo.php</p> <p><code>echo \"&lt;?php phpinfo();\" | sudo tee /var/www/html/veo.php</code></p> <p>Para probarlo nos vamos a muestro navegador web y accedemos al nombre de dominio o direcci\u00f3n IP de nuestro servidor, seguido del nombre del script, que en nuestro caso es <code>veo.php</code>:</p> <p></p>"},{"location":"Documento-informacion/#paso-2","title":"PASO 2","text":""},{"location":"Documento-informacion/#automatizamos-la-instalacion-y-configuracion-de-phpmyadmin-mediante-un-script","title":"Automatizamos la instalaci\u00f3n y configuraci\u00f3n de PhpMyAdmin mediante un script","text":"Automatizar la instalaci\u00f3n y configuraci\u00f3n de PhpMyAdmin mediante un script proporciona eficiencia, consistencia, seguridad y escalabilidad, lo que es extremadamente \u00fatil para administradores de sistemas y equipos de desarrollo que gestionan m\u00faltiples entornos o despliegues frecuentes."},{"location":"Documento-informacion/#en-este-script-nos-realiza-las-siguientes-tareas-automaticamente","title":"En este script nos realiza las siguientes tareas autom\u00e1ticamente","text":"<ul> <li> <p>Nos instala phpMyAdmin     1-  Instala phpMyAdmin junto con las extensiones PHP necesarias <code>(php-mbstring,   php-zip, php-gd, php-json, php-curl).</code>     2- Configura phpMyAdmin para que funcione con Apache.</p> <p></p> <p></p> <p>3- Habilita la extensi\u00f3n <code>mbstring</code> y reinicia Apache.</p> </li> <li> <p>Nos configura autom\u00e1ticamente el acceso por contrase\u00f1a para la cuenta root de MySQL     1- Cambia el m\u00e9todo de autenticaci\u00f3n del usuario root de MySQL de auth_socket a <code>caching_sha2_password.</code></p> </li> <li> <p>Nos configura tambi\u00e9n el acceso por contrase\u00f1a para un usuario dedicado de MySQL     1- Crea un <code>nuevo usuario de MySQL</code> con una contrase\u00f1a segura.</p> <p></p> <p>2- Otorga al nuevo usuario los <code>privilegios</code> apropiados para gestionar las bases de datos a trav\u00e9s de phpMyAdmin.</p> <p></p> </li> <li> <p>Nos asegurando nuestra Instancia de phpMyAdmin     1- Habilita el uso de sobrescrituras de archivos <code>.htaccess</code> en la configuraci\u00f3n de Apache para phpMyAdmin.</p> <p></p> <p>2- Crea un archivo <code>.htaccess</code> en el directorio de phpMyAdmin para implementar autenticaci\u00f3n b\u00e1sica.</p> <p></p> <p>3- Crea un archivo .<code>htpasswd</code> para almacenar las credenciales de usuario y contrase\u00f1a.</p> <p></p> <p>4- Reinicia Apache para aplicar los cambios.</p> </li> </ul> <p>** Puedes ver el script aqu\u00ed</p> <p>DESCARGAR</p> <p>Vemos el primer control de acceso para phpMyAdmin</p> <p></p> <p>Ahora el segundo y habitual</p> <p></p> <p>Finalmente estamos dentro para gestionar nuestras BBDD</p> <p></p>"},{"location":"Instalacion-LAMP/","title":"Instalacion LAMP","text":"<pre><code>\n\n#!/bin/bash\n\n#############################################\necho \"Script para automatizar la instalaci\u00f3n de LAMP para Debian/Ubuntu o derivados\"\necho \"Apache\"\necho \"MySQL\"\necho \"PHP\"\n\n#############################################\n#Actualizaci\u00f3n de sistema####################\n\necho \"Actualizando el sistema..\"\nsudo apt update -y &amp;&amp; sudo apt dist-upgrade -y &amp;&amp; sudo apt autoremove -y\n#Instalaci\u00f3n de Apache#######################\n\necho \"Instalando apache..\"\nsudo apt install apache2 -y\n#Instalaci\u00f3n de PHP##########################\n\necho \"Instalando PHP..\"\nsudo apt install php libapache2-mod-php php-mysql -y\nsudo apt install php-cli php-cgi php-mysql php-pgsql -y\n\n#Instalaci\u00f3n MySQL###########################\n\necho \"Instalando MySQL-server..\"\nsudo apt install mysql-server -y\n\n#Reinicio del servicio apache y comprobaci\u00f3n del estado##############\n\necho \"Reiniciando apache..\"\nsudo systemctl restart apache2.service\nsudo systemctl --no-pager status apache2.service\nsudo ufw enable\nsudo ufw allow in \"Apache Full\"\nsudo ufw allow 22\nsudo ufw status\n\necho \"--------------AUTOR  EDU-----------------\"\nexit 0\n\n</code></pre>"},{"location":"phpmyadmin-script/","title":"Phpmyadmin script","text":"<pre><code>\n\n#!/bin/bash\n\n#Script para automatizar la instalaci\u00f3n y configuraci\u00f3n de PhpMyAdmin.\n\n#Instalaci\u00f3n de dialog\nsudo apt install dialog -y\n\n#Funci\u00f3n para capturar el c\u00f3digo de retorno del di\u00e1logo\nfunction acabar() {\n  exit_status=$?\n  # Verificar si se seleccion\u00f3 \"Cancelar\"\n  if [ $exit_status -ne 0 ]; then\n    clear\n    echo \"Operaci\u00f3n cancelada\"\n    exit 1\n  fi\n}\n\n#Actualizamos la memoria cach\u00e9 del sistema\nsudo apt update -y\n\n#Instalamos estos paquetes\nsudo apt install phpmyadmin php-mbstring php-zip php-gd php-json php-curl -y\n\n#Cambiamos la contrase\u00f1a del usuario root de mysql-server\npasswdmysqlroot=$(dialog --title \"Contrase\u00f1a para root en mysql\" \\\n    --stdout \\\n    --inputbox \"Password (8 carac.mayus-minus-n\u00fam-signo)\" 0 50)\n  #Llamo a la funcion:\n  acabar\n\nsqlcomandos=\"alter user 'root'@'localhost' identified with caching_sha2_password by '$passwdmysqlroot';\nflush privileges;\"\n\n#Ejecutamos los comandos SQL en mysql\nsudo mysql -u root -e \"$sqlcomandos\"\n\n#Habilitar la extensi\u00f3n PHP mbstring\necho \"Activando extensiones de PHP...\"\nsudo phpenmod mbstring\n\n#Reiniciamos Apache\nsudo systemctl restart apache2\n\n#Generamos un nuevo usuario y una contrase\u00f1a en mysql-server para phpmyadmin\nusuariophp=$(dialog --title \"Nuevo usuario para mysql\" \\\n    --stdout \\\n    --inputbox \"Nombre\" 0 0)\n  #Llamo a la funcion:\n  acabar\n\npasswdmysqlphp=$(dialog --title \"Contrase\u00f1a para el nuevo usuario\" \\\n    --stdout \\\n    --inputbox \"Password (8 carac.mayus-minus-n\u00fam-signo)\" 0 50)\n  #Llamo a la funcion:\n  acabar\n\n#Ahora creamos un nuevo usuario para el acceso a phpmyadmin\nsqlcomandosphp=\"create user '$usuariophp'@'localhost' identified with caching_sha2_password by '$passwdmysqlphp';\nflush privileges;\"\n\n#Ejecutamos los comandos SQL en mysql\nsudo mysql -u root -p\"$passwdmysqlroot\" -e \"$sqlcomandosphp\"\n\n#Habilitamos el uso de anulaciones del archivo .htaccess\n#Agregamos la directiva \"AllowOverride All\" dentro de la secci\u00f3n \"&lt;Directory /usr/share/phpmyadmin&gt;\"\u200b\u200b\u200b del archivo de configuraci\u00f3n.\nsudo sed -i '7a\\    AllowOverride All' /etc/apache2/conf-available/phpmyadmin.conf\n\n#Habilitamos y reiniciamos apache\nsudo a2enconf phpmyadmin\nsudo systemctl restart apache2.service\n\n#Habilitado el uso de .htaccess para la aplicaci\u00f3n, debemos crear uno para implementar seguridad.\n#El archivo lo crearemos dentro del directorio de la aplicaci\u00f3n.\necho \"AuthType Basic\nAuthName \\\"Restricted Files\\\"\nAuthUserFile /etc/phpmyadmin/.htpasswd\nRequire valid-user\" | sudo tee /usr/share/phpmyadmin/.htaccess\n\n#La ubicaci\u00f3n que hemos seleccionado para el archivo de contrase\u00f1a es /etc/phpmyadmin/.htpasswd. \n#Ahora podemos crear este archivo y pasarle un usuario inicial con la utilidad htpasswd:\nusuario=$(dialog --title \"Datos para el archivo .htpasswd\" \\\n    --stdout \\\n    --inputbox \"Nombre del usuario\" 0 0)\n  #Llamo a la funcion:\n  acabar\n\n#clave=$(dialog --title \"Datos para el archivo .htpasswd\" \\\n  #--stdout \\\n  #--inputbox \"Password (8 carac.mayus-minus-n\u00fam-signo)\" 0 50)\n#Llamo a la funcion:\n#acabar\n\n#Aseguramos la instancia de phpMyAdmin y reiniciamos\nsudo htpasswd -c /etc/phpmyadmin/.htpasswd \"$usuario\"\nsudo systemctl restart apache2.service\n\n#Accedemos a la interfaz web  (navegador):\n#Visitando la direcci\u00f3n IP p\u00fablica de nuestro servidor, con /phpmyadmin agregado al final.\nip=$(hostname -I)\ndialog --title \"Usuario de la cuenta y la contrase\u00f1a adicional que hemos configurado\" \\\n  --backtitle \"En el acceso a phpMyAdmin, nos solicitar\u00e1:\"\\\n  --msgbox \"En nuestro navegador pondremos todo seguido: $ip/phphmyadmin\" 0 50\nclear\nexit 0\n\n</code></pre>"}]}