{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Pr\u00e1ctica 3 para la creaci\u00f3n de una p\u00e1gina est\u00e1tica en mkdocs Descripci\u00f3n Paso1 Paso2","title":"Inicio"},{"location":"#practica-3-para-la-creacion-de-una-pagina-estatica-en-mkdocs","text":"","title":"Pr\u00e1ctica 3 para la creaci\u00f3n de una p\u00e1gina est\u00e1tica en mkdocs"},{"location":"#descripcion","text":"Paso1 Paso2","title":"Descripci\u00f3n"},{"location":"Paso1/","text":"Requisitos Previos Antes de empezar, me he asegurado de tener Python en el sistema. lo he verificado ejecutando: python3 --version Como no lo ten\u00eda instalado y me daban problemas las instalaci\u00f3n de pip, he decidido hacer la instalaci\u00f3n con: sudo apt install python3 Instalar MkDocs sudo apt install mkdocs Para comprobar: mkdocs --version Creamos en nuestro GitHub un repositorio para esta pr\u00e1ctica Copiamos nuestro code en SSH para clonar en nuestro entorno local yo-virtual$ git clone git@github.com:eduherjul/todopractica3.git Comprobamos y no posicionamos en el directorio del repositorio clonado, creando el mkdocs","title":"Paso1"},{"location":"Paso1/#requisitos-previos","text":"Antes de empezar, me he asegurado de tener Python en el sistema. lo he verificado ejecutando: python3 --version Como no lo ten\u00eda instalado y me daban problemas las instalaci\u00f3n de pip, he decidido hacer la instalaci\u00f3n con: sudo apt install python3","title":"Requisitos Previos"},{"location":"Paso1/#instalar-mkdocs","text":"sudo apt install mkdocs Para comprobar: mkdocs --version","title":"Instalar MkDocs"},{"location":"Paso1/#creamos-en-nuestro-github-un-repositorio-para-esta-practica","text":"Copiamos nuestro code en SSH para clonar en nuestro entorno local yo-virtual$ git clone git@github.com:eduherjul/todopractica3.git Comprobamos y no posicionamos en el directorio del repositorio clonado, creando el mkdocs","title":"Creamos en nuestro GitHub un repositorio para esta pr\u00e1ctica"},{"location":"Paso2/","text":"Construir el Sitio Est\u00e1tico Ejecutamos el siguiente comando para construir todos los archivos necesarios para tu sitio web est\u00e1tico, que se guardar\u00e1n en la carpeta site: mkdocs build Este comando genera una versi\u00f3n est\u00e1tica de tu sitio, lista para ser desplegada en GitHub Pages u otro servidor web. Desplegar en GitHub Pages Para desplegar los archivos est\u00e1ticos en GitHub Pages desde un repositorio de GitHub, seguiremos estos pasos: Configurar GitHub Pages Nos aseguraremos de que GitHub Pages est\u00e9 configurado para usar la rama gh-pages. Esta configuraci\u00f3n es necesaria para que tu sitio web est\u00e9 disponible en una URL p\u00fablica. Para ello: Navega a la pesta\u00f1a Settings (Configuraci\u00f3n). En el men\u00fa de la izquierda, selecciona Pages. En Source (Fuente), selecciona gh-pages como la rama y la carpeta docs. Guarda los cambios. Desplegar los en GitHub Pages Usamos el siguiente comando para desplegar tu sitio: mkdocs gh-deploy Este comando construir\u00e1 tu sitio y lo subir\u00e1 a la rama gh-pages de tu repositorio de GitHub, haciendo que tu documentaci\u00f3n est\u00e9 disponible en https://tu-usuario.github.io/user-guid Con estos pasos, tu documentaci\u00f3n estar\u00e1 desplegada y accesible en GitHub Pages. Cada vez que deseemos actualizar tu sitio en GitHub Pages con nuevos cambios, deberemos ejecutar mkdocs gh-deploy* manualmente. Esto asegura que los cambios en nuestra documentaci\u00f3n local se reflejen en el sitio web desplegado","title":"Paso2"},{"location":"Paso2/#construir-el-sitio-estatico","text":"Ejecutamos el siguiente comando para construir todos los archivos necesarios para tu sitio web est\u00e1tico, que se guardar\u00e1n en la carpeta site: mkdocs build Este comando genera una versi\u00f3n est\u00e1tica de tu sitio, lista para ser desplegada en GitHub Pages u otro servidor web.","title":"Construir el Sitio Est\u00e1tico"},{"location":"Paso2/#desplegar-en-github-pages","text":"Para desplegar los archivos est\u00e1ticos en GitHub Pages desde un repositorio de GitHub, seguiremos estos pasos: Configurar GitHub Pages Nos aseguraremos de que GitHub Pages est\u00e9 configurado para usar la rama gh-pages. Esta configuraci\u00f3n es necesaria para que tu sitio web est\u00e9 disponible en una URL p\u00fablica. Para ello: Navega a la pesta\u00f1a Settings (Configuraci\u00f3n). En el men\u00fa de la izquierda, selecciona Pages. En Source (Fuente), selecciona gh-pages como la rama y la carpeta docs. Guarda los cambios. Desplegar los en GitHub Pages Usamos el siguiente comando para desplegar tu sitio: mkdocs gh-deploy Este comando construir\u00e1 tu sitio y lo subir\u00e1 a la rama gh-pages de tu repositorio de GitHub, haciendo que tu documentaci\u00f3n est\u00e9 disponible en https://tu-usuario.github.io/user-guid Con estos pasos, tu documentaci\u00f3n estar\u00e1 desplegada y accesible en GitHub Pages. Cada vez que deseemos actualizar tu sitio en GitHub Pages con nuevos cambios, deberemos ejecutar mkdocs gh-deploy* manualmente. Esto asegura que los cambios en nuestra documentaci\u00f3n local se reflejen en el sitio web desplegado","title":"Desplegar en GitHub Pages"}]}